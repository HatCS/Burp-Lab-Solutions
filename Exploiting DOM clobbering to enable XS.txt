Exploiting DOM clobbering to enable XSS

Our first hint is that we can use HTML in blog comments. 

Nothing. Let's look at any underlying JS running. Hit F12 and go to the Debugger tab. There you'll find a loadCommentsWithDomClobbering.js script.

Look through it and notice this line:
let defaultAvatar = window.defaultAvatar || {avatar: '/resources/images/avatarDefault.svg'}

Cool, so it pulls resources from /resource/images/avatarDefault. So let's try to use it to set our avatar as an XSS in that folder by creating a comment:

<a id=defaultAvatar><a id=defaultAvatar name=avatar href="cid:&quot;onerror=alert(1)//"> 

The payload is explained way better than I can explain it in the lab solution. 
To trigger it, make another comment and reload the blog page. You should get your XSS.